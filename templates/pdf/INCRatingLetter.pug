doctype html
head
  meta(charset='UTF-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  title INC Rating Letter
  style.
    * {
      margin: 0;
      padding: 0;
    }
    body {
      font-family: 'Arial';
    }
    section {
      margin: 0 1.5rem;
      line-height: 1.5rem;
    }
    
    main {
      font-style: italic;
    }
    main > section {
      margin: 0 3rem;
    }
    .table-div{
      overflow-x: auto;
      margin: 1rem
    }
    table {
      border-collapse: collapse;
      width: 100%;
      border: 1px solid black;
      border-spacing: 0;
    }
    thead {
      color: #111;
      height: 25px;
    }
    th, td{
      border: 1px solid black;
      text-align: left;
      padding: 8px;
    }
    footer{
      margin: 1.5rem 1rem;
    }



body 
  header 
    section 
      h1 INC Rating Letter 
      br
      p(style="margin-bottom: 6rem") Shri/Ms.
      p(style="text-align: center") 
        strong 
          u Confidential
      p Dear Sir/Madam,
      p(style="text-align: center; margin-top: 2rem") 
        strong 
          u Credit rating for bank facilities/NCD/CP/Other
  main 
    section 
      ol 
        li This is with reference to our rating agreement  dated Month XX, 20XX, wherein your company/entity had agreed to provide information including No Default statement on monthly basis and to pay annual surveillance fee [I1] to INFOMERICS to monitor and conduct the surveillance/review of the Rating(s) over the lifetime of the rated Debt Instrument
        li Your company/entity has not submitted No default statement (NDS), data for review, despite repeated requests by INFOMERICS (last E-Mail dated 
          strong Month XX, 20XX)
        li In the absence of adequate co-operation from your end despite repeated requests, Our Rating Committee has reviewed the following ratings:
          div(class="table-div")
            table 
              thead 
                tr 
                  th Facilities/Instruments
                  th(style="text-align: center") Amount (Rs. Crore)
                  th(style="text-align: center") Current Ratings
                  th(style="text-align: center") Previous Ratings 
                  th(style="text-align: center") Rating Action 
              tbody
                each company, key in data     
                  tr 
                    td #{company.category_text}
                    td(style="text-align: center") #{company.instrument_size_number}
                    td(style="text-align: center") #{company.rating}
                    td(style="text-align: center") #{company.previous_rating}
                    td(style="text-align: center") #{company.rating_action}
                tr(class="total")
                    td(style="font-weight: 600") Total
                    td(style="font-weight: 600; text-transform: capitalize; text-align: center;" class="amount") XX
                    td
                    td 
                    td 
          p * Issuer not cooperating; Based on best available information
        li The current rating action has been taken by INFOMERICS in accordance with SEBI’s Circular no. SEBI/HO/MIRSD/MIRSD4/CIR/P/2016/119 dated November 1, 2016 on the basis of best available information on the company’s performance.
          ol(style="margin: 0 1rem")
            li Our rating symbols for long-term and short-term ratings and explanatory notes thereon are attached in 
              strong Annexure I. 
            li We would be issuing a Press Release  to inform the regulators, investors and public at large. The press release for the rating(s) will be communicated to you shortly.
            li INFOMERICS reserves the right to undertake a surveillance/review of the rating(s) from time to time, based on circumstances warranting such review till such time the rated debt continues as per our policy on Non Cooperation by clients on our website.
            li 
              strong  However in  the meanwhile, you shall continue to provide us with a No Default Statement as at the last date of the month on the first date of succeeding month without fail.
              | The NDS shall be mailed every month to 
              a(href="mailto:nds@Infomerics.com" target="_blank" rel="noreferrer")  nds@Infomerics.com 
              | and to the mail id of the undersigned.
            li As and when your company commences active cooperation with Infomerics by way of furnishing requisite information/ surveillance fees as applicable, the rating would be reviewed in order to remove it from Issuer Not Cooperating (INC) Category
            li Please note that INFOMERICS ratings are not recommendations to buy, sell or hold any security or to sanction, renew, disburse or recall the bank facilities. INFOMERICS do not take into account the sovereign risk, if any, attached to the foreign currency loans, and the ratings are applicable only to the rupee equivalent of these loans.
            li Users of this rating may kindly refer our website 
              a( rel="noreferrer" href="https://www.infomerics.com/" target="_blank") www.infomerics.com 
              | for latest update on the outstanding rating.
  footer 
    p Thanking You 
    p Yours faithfully,
    br
    div(style="display: flex; justify-content: space-between; line-height: 1.4rem") 
        div  
          p 
            strong #{data[0].rating_analyst}
          p Rating Analyst 
          a(href=`mailto:${ra_email}` target="_blank" rel="noreferrer")  #{data[0].rating_analyst_email} 
        div 
          p 
            strong #{data[0].group_head}
          p Group Head
          a(href=`mailto:${gh_email}` target="_blank" rel="noreferrer")  #{data[0].group_head_email}





script().
  let totalAssignedRating = document.querySelector(".amount")
  let amount = !{JSON.stringify(data)}
  let totalAmount = 0
  for (let i = 0; i < amount.length; i++) {
    totalAmount += Number(amount[i].amount)
  }
  totalAssignedRating.innerText = numberToEnglish(Math.floor(totalAmount))
  function numberToEnglish(n, custom_join_character) {
    let string = n.toString(),
        units, tens, scales, start, end, chunks, chunksLen, chunk, ints, i, word, words;
    let and = custom_join_character || 'and';
    /* Is number zero? */
    if (parseInt(string) === 0) {
        return 'zero';
    }
    /* Array of units as words */
    units = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
    /* Array of tens as words */
    tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
    /* Array of scales as words */
    scales = ['', 'thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion', 'decillion', 'undecillion', 'duodecillion', 'tredecillion', 'quatttuor-decillion', 'quindecillion', 'sexdecillion', 'septen-decillion', 'octodecillion', 'novemdecillion', 'vigintillion', 'centillion'];
    /* Split user arguemnt into 3 digit chunks from right to left */
    start = string.length;
    chunks = [];
    while (start > 0) {
        end = start;
        chunks.push(string.slice((start = Math.max(0, start - 3)), end));
    }
    /* Check if function has enough scale words to be able to stringify the user argument */
    chunksLen = chunks.length;
    if (chunksLen > scales.length) {
        return '';
    }
    /* Stringify each integer in each chunk */
    words = [];
    for (i = 0; i < chunksLen; i++) {
        chunk = parseInt(chunks[i]);
        if (chunk) {
            /* Split chunk into array of individual integers */
            ints = chunks[i].split('').reverse().map(parseFloat);
            /* If tens integer is 1, i.e. 10, then add 10 to units integer */
            if (ints[1] === 1) {
                ints[0] += 10;
            }
            /* Add scale word if chunk is not zero and array item exists */
            if ((word = scales[i])) {
                words.push(word);
            }
            /* Add unit word if array item exists */
            if ((word = units[ints[0]])) {
                words.push(word);
            }
            /* Add tens word if array item exists */
            if ((word = tens[ints[1]])) {
                words.push(word);
            }
            /* Add 'and' string after units or tens integer if: */
            if (ints[0] || ints[1]) {

                /* Chunk has a hundreds integer or chunk is the first of multiple chunks */
                if (ints[2] || !i && chunksLen) {
                    words.push(and);
                }
            }
            /* Add hundreds word if array item exists */
            if ((word = units[ints[2]])) {
                words.push(word + ' hundred');
            }
        }

    }

    return words.reverse().join(' ');

  }
